import numpy as np 
import tensorflow as tf 
from tensorflow.keras.models import Sequential 
from tensorflow.keras.layers import Embedding, LSTM, Dense, Bidirectional 
from tensorflow.keras.preprocessing.text import Tokenizer 
from tensorflow.keras.preprocessing.sequence import pad_sequences 
from sklearn.model_selection import train_test_split 
texts = ["I love this product", "This is a terrible product", "Amazing experience",  
"Worst purchase ever", "Really good", "I hate it", "It was okay"] 
labels = [1, 0, 1, 0, 1, 0, 1] 
tokenizer = Tokenizer() 
tokenizer.fit_on_texts(texts) 
X = tokenizer.texts_to_sequences(texts) 
X = pad_sequences(X, padding='post') 
X_train, X_test, y_train, y_test = train_test_split(X, labels, test_size=0.3, random_state=42) 
model = Sequential() 
model.add(Embedding(input_dim=len(tokenizer.word_index) + 1, output_dim=8)) 
 
model.add(Bidirectional(LSTM(16))) 
model.add(Dense(1, activation='sigmoid')) 
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy']) 
model.fit(X_train, np.array(y_train), epochs=5, batch_size=2) 
loss, accuracy = model.evaluate(X_test, np.array(y_test)) 
print(f'Accuracy on test data: {accuracy * 100:.2f}%') 
predictions = model.predict(X_test) 
print(f'Predictions: {predictions}')
